// Check if MetaMask is installed and enabled
if (window.ethereum) {
    const web3 = new Web3(window.ethereum);

    // Request account access if needed
    document.getElementById("connectWallet").addEventListener("click", function() {
        window.ethereum.enable().then(function(accounts) {
            console.log("Wallet connected:", accounts[0]);
        }).catch(function(error) {
            console.error("User denied account access:", error);
        });
    });

    // Interacting with the smart contract
    const abi = [
        {
            "inputs": [],
            "name": "createProduct",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "string",
                    "name": "_title",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "_description",
                    "type": "string"
                },
                {
                    "internalType": "uint256",
                    "name": "_priceInSepoliaEth",
                    "type": "uint256"
                }
            ],
            "name": "createProduct",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                }
            ],
            "name": "purchaseProduct",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "title",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "description",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "priceInSepoliaEth",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "purchased",
                    "type": "bool"
                }
            ],
            "name": "ProductCreated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "id",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "title",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "description",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "purchased",
                    "type": "bool"
                }
            ],
            "name": "ProductPurchased",
            "type": "event"
        }
    ];

    const address = "0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8";

    // Create a new contract object, providing the ABI and address
    const contract = new web3.eth.Contract(abi, address);

    // Buy Product button click event
    document.getElementById("buyProduct").addEventListener("click", function() {
        const productId = 1; // Example product ID to buy
        contract.methods.purchaseProduct(productId)
            .send({ from: web3.eth.defaultAccount, value: web3.utils.toWei('0.0001', 'ether') }) // Example of sending ether with the transaction
            .on('receipt', function(receipt){
                console.log("Transaction receipt:", receipt);
            })
            .on('error', function(error){
                console.error("Transaction error:", error);
            });
    });

    // Sell Product button click event
    document.getElementById("sellProduct").addEventListener("click", function() {
        const title = "My Product"; // Example product title
        const description = "Product Description"; // Example product description
        const priceInSepoliaEth = 100; // Example price in Sepolia Ethereum
        contract.methods.createProduct(title, description, priceInSepoliaEth)
            .send({ from: web3.eth.defaultAccount, value: web3.utils.toWei('0.001', 'ether') }) // Example of sending ether with the transaction
            .on('receipt', function(receipt){
                console.log("Product created:", receipt);
            })
            .on('error', function(error){
                console.error("Error creating product:", error);
            });
    });
} else {
    // MetaMask is not installed
    console.error("MetaMask is not installed.");
}
